#version 410 core

layout (location = 0) out vec4 color;

in vec2 vPosition;
in vec2 vTextureCoords;

uniform sampler2DMS uDepthTexture;
uniform usampler2D uDataTexture;


void main() {
    ivec2 screenCoords = ivec2(gl_FragCoord.xy);
    float depth = texelFetch(uDepthTexture, screenCoords, 0).r;
    float stencil = texture(uDataTexture, vTextureCoords).r;
    //color = vec4(depth, depth, stencil, 1.0);

    float r = 16;
    ivec2 size = textureSize(uDataTexture, 0);
    float xs = size.x;
    float ys = size.y;


    ivec2 iResolution = size;
    float Pi = 6.28318530718; // Pi*2

    // GAUSSIAN BLUR SETTINGS {{{
    float Directions = 16.0; // BLUR DIRECTIONS (Default 16.0 - More is better but slower)
    float Quality = 3.0; // BLUR QUALITY (Default 4.0 - More is better but slower)
    float Size = r; // BLUR SIZE (Radius)
    // GAUSSIAN BLUR SETTINGS }}}

    vec2 Radius = Size/iResolution.xy;

    // Normalized pixel coordinates (from 0 to 1)
    vec2 uv = vTextureCoords;
    // Pixel colour
    vec4 Color = texture(uDataTexture, uv);

    // Blur calculations
    for( float d=0.0; d<Pi; d+=Pi/Directions)
    {
        for(float i=1.0/Quality; i<1.001; i+=1.0/Quality)
        {
            Color += texture( uDataTexture, uv+vec2(cos(d),sin(d))*Radius*i);
        }
    }

    // Output to screen
    Color /= Quality * Directions + 1.0; //- 15.0;
    color =  Color;
    color.a = 0.8;



    //color = vec4(stencil, 0.0, 0.0, 1.0);

/*    float x, y, xx, yy, rr = r * r, dx, dy, w, w0;
    w0 = 0.3780 / pow(r, 1.975);
    vec2 p;
    vec4 col = vec4(0.0, 0.0, 0.0, 0.0);
    for (dx = 1.0 / xs, x = -r, p.x = 0.5 + (vPosition.x * 0.5) + (x * dx); x <= r; x++) {
        xx = x * x;
        for (dy = 1.0 / ys, y = -r, p.y = 0.5 + (vPosition.y * 0.5) + (y * dy); y <= r; y++) {
            yy = y * y;
            if (xx + yy <= rr) {
                w = w0 * exp((-xx - yy) / (2.0 * rr));
                col += texture2D(uDataTexture, p) * w;
            }
            p.y += dy;
        }
        p.x += dx;
    }
    color = col;*/
}
