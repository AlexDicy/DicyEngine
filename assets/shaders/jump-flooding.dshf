#version 410 core

layout (location = 0) out vec4 color;

in vec2 vPosition;
in vec2 vTextureCoords;

uniform sampler2DMS uPassDepthTexture;
uniform sampler2DMS uPassTexture;
uniform int uOffset;
uniform ivec2 uDirection;

const float MAX_DISTANCE = 1000000000.0f;


vec4 textureMultisample(sampler2DMS tex, ivec2 coord) {
    vec4 color = vec4(0.0);
    for (int i = 0; i < 4; i++) {
        color += texelFetch(tex, coord, i);
    }
    return color /= 4.0;
}


void main() {
    ivec2 screenCoords = ivec2(gl_FragCoord.xy);
    vec4 passData = textureMultisample(uPassTexture, screenCoords);

    float bestSqrDistance = MAX_DISTANCE;
    vec2 closestPoint = vec2(0.0);

    for (int i = -1; i <= 1; i++) {
        ivec2 offset = uDirection * i * uOffset;
        vec2 point = round(texelFetch(uPassTexture, screenCoords + offset, 0).gb);
        float sqrDistance = (point.x > 0.0f || point.y > 0.0f) ? dot(point - vec2(screenCoords), point - vec2(screenCoords)) : MAX_DISTANCE;
        if (sqrDistance < bestSqrDistance) {
            bestSqrDistance = sqrDistance;
            closestPoint = point;
        }
    }

    // set depth value to the closest point's depth
    gl_FragDepth = texelFetch(uPassDepthTexture, ivec2(closestPoint), 0).r;

    color = vec4(passData.r, closestPoint, 1.0f);
}
